{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","utils/userId.tsx","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","title","completed","id","TodoList","todos","map","username","getUserById","userId","usersFromServer","find","initialTodos","todosFromServer","App","useState","setTitle","titleErrorMessage","setTitleErrorMessage","setUserId","userErrorMessage","setUserErrorMessage","setTodos","maxId","Math","max","action","method","onSubmit","event","preventDefault","trim","existTodos","htmlFor","type","placeholder","value","onChange","target","required","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.38d78154.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/Types';\n\ntype Props = {\n  user: User | null;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n    {user?.name}\n  </a>\n);\n","import React from 'react';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Types';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title, completed, id, user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={`TodoInfo ${completed && 'TodoInfo--completed'}`}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Types';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          todo={todo}\n          key={todo.id}\n        />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../types/Types';\nimport usersFromServer from '../api/users';\n\nexport const getUserById = (userId: number): User | null => {\n  return usersFromServer.find(user => user.id === userId)\n      || null;\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { Todo } from './types/Types';\nimport { TodoList } from './components/TodoList';\nimport { getUserById } from './utils/userId';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nconst initialTodos: Todo[] = todosFromServer\n  .map(todo => ({\n    ...todo,\n    user: getUserById(todo.userId) || null,\n  }));\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [titleErrorMessage, setTitleErrorMessage] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [userErrorMessage, setUserErrorMessage] = useState(false);\n\n  const [todos, setTodos] = useState(initialTodos);\n\n  const reset = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleErrorMessage(false);\n  };\n\n  const handleUserChange = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    setUserId(+event.target.value);\n    setUserErrorMessage(false);\n  };\n\n  const addTodo = (todo: Todo) => {\n    setTodos(existTodos => [...existTodos, todo]);\n  };\n\n  const maxId = Math.max(...todosFromServer.map(todo => todo.id));\n\n  const addNewPost = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setTitleErrorMessage(!title);\n    setUserErrorMessage(!userId);\n\n    const trimmedTitle = title.trim();\n\n    if (!trimmedTitle || !userId) {\n      return;\n    }\n\n    addTodo({\n      id: maxId + 1,\n      title,\n      userId,\n      completed: false,\n      user: getUserById(userId),\n    });\n\n    reset();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={addNewPost}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            id=\"title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n\n          {titleErrorMessage && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User: </label>\n          <select\n            id=\"user\"\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleUserChange}\n            required\n          >\n            <option\n              value=\"0\"\n              disabled\n            >\n              Choose a user\n            </option>\n            {usersFromServer.map(user => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {userErrorMessage && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}